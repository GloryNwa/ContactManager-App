{"version":3,"sources":["context.js","components/contacts/Contacts.js","components/contacts/Contactss.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contacts","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","cusor","marginRight","Contactss","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","Type","EditContact","updContact","match","params","put","Header","branding","href","About","Test","title","body","fetch","then","response","json","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f9adfb3e.chunk.js","sourcesContent":["import React, {Component}  from 'react';\r\nimport axios  from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n\r\n            case 'ADD_CONTACT':\r\n                return {\r\n                    ...state,\r\n                    contacts: [action.payload ,\r\n                    ...state.contacts]\r\n                };\r\n                case 'UPDATE_CONTACT':\r\n                    return {\r\n                        ...state,\r\n                        contacts: state.contacts.map(contact => contact.id === action.payload.id ?\r\n                             (contact = action.payload) : contact)\r\n                 };\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n        contacts:[],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n        };\r\n\r\n       async componentDidMount(){\r\n          const res = await axios\r\n          .get('https://jsonplaceholder.typicode.com/users')\r\n        //     .then(res => this.setState({contacts: res.data\r\n\r\n        //    }));\r\n        this.setState({contacts: res.data});\r\n\r\n        }\r\n    \r\n\r\n    render(){\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n              {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n      showContactInfo: true\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try{\r\n       await axios.delete\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        // .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}));\r\n        dispatch({type: 'DELETE_CONTACT', payload: id\r\n      });\r\n    }catch(e) {\r\n      dispatch({type: 'DELETE_CONTACT', payload: id\r\n    });\r\n    }\r\n  };\r\n\r\n    render() {\r\n        const {id, name, email, phone} = this.props.contact;\r\n        const { showContactInfo} = this.state;\r\n        return (\r\n             <Consumer>\r\n               {value =>{\r\n                 const { dispatch } = value;\r\n                 return(\r\n\r\n                  <div className=\"card card-body mb-3\">\r\n                  <h4>{name}{''}\r\n                  \r\n                  <i \r\n                    onClick={() =>\r\n                    this.setState({showContactInfo:\r\n                    !this.state.showContactInfo}) \r\n                    }\r\n                    className=\"fa fa-sort-down\"\r\n                    style={{cursor: 'pointer'}}\r\n                    />  \r\n                    <i className=\"fa fa-times\"\r\n                    style={{cursor: 'pointer', float:'right', color:'red'}}\r\n                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                    ></i>   \r\n                    <Link to={`contact/edit/${id}`}>\r\n                        <i className=\"fa fa-pencil\"\r\n                         style={{cusor:'pointer', float:'right', color:'black', marginRight:'1rem'}}\r\n                        ></i>\r\n                    </Link>       \r\n                 </h4> \r\n                 \r\n                  {showContactInfo ? (<ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n   \r\n                </ul> ) : null}\r\n                  \r\n               </div>\r\n                 );\r\n               }}\r\n             </Consumer>\r\n\r\n\r\n\r\n\r\n          \r\n        )\r\n    }\r\n}                    \r\nContacts.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n\r\n};\r\n\r\nexport default Contacts;","import React, { Component } from 'react';\r\nimport Contacts from './Contacts';\r\nimport { Consumer } from '../../context'\r\n\r\n\r\n\r\nclass Contactss extends Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return(\r\n            <Consumer>\r\n              {value => {\r\n                  const {contacts} = value;\r\n                  return (\r\n                    <React.Fragment>\r\n                    <h1 className=\"display-4 mb-2\"><span style={{color:'red'}}>Contact </span> List</h1>\r\n                    {contacts.map(contact =>(\r\n                            <Contacts\r\n                            key={contact.id}\r\n                            contact={contact} \r\n                            \r\n                            />\r\n                             \r\n                         ))}   \r\n                       </React.Fragment>\r\n\r\n                  )\r\n\r\n              }}\r\n            \r\n            </Consumer>\r\n        )\r\n       \r\n    }\r\n}\r\n\r\n\r\nexport default Contactss;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\n\r\n const TextInputGroup = ({\r\n   label,\r\n   name,\r\n   value,\r\n   placeholder,\r\n   type,\r\n   onChange,\r\n    error\r\n\r\n }) => {\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input type={type}\r\n          name={name}\r\n          className={classnames(\"form-control form-control-lg\", {'is-invalid': error})}\r\n          placeholder={placeholder}\r\n         value={value}\r\n         onChange={onChange}\r\n         />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n        \r\n    );\r\n};\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\n\r\nexport default TextInputGroup;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Consumer } from '../../context';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\n\r\n\r\n class AddContact extends Component {\r\n     state = {\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors: {}\r\n     };\r\n\r\n     onSubmit = async (dispatch, e) => {\r\n         e.preventDefault();\r\n         const {name, email, phone} = this.state;\r\n\r\n         //Check For Errors\r\n         if(name === ''){\r\n           this.setState ({errors: {name: 'Name is required' }});\r\n           return;\r\n         }\r\n\r\n         if(email === ''){\r\n          this.setState ({errors: {email: 'Email is required' }});\r\n          return;\r\n        }\r\n\r\n\r\n        if( phone === ''){\r\n          this.setState ({errors: {phone: 'Phone is required' }});\r\n          return;\r\n        }\r\n\r\n\r\n\r\n         const newContact = {\r\n            //  id: uuid(),\r\n             name,\r\n             email,\r\n             phone\r\n         };\r\n\r\n        const res = axios\r\n         .post\r\n           ('https://jsonplaceholder.typicode.com/users',newContact)\r\n            dispatch({ type: 'ADD_CONTACT', payload: res.data});\r\n          \r\n        // dispatch({type: 'ADD_CONTACT', payload: newContact});\r\n        \r\n        //Clear Input\r\n        this.setState({\r\n           name: '',\r\n          email: '',\r\n          phone: '',\r\n          errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n     };\r\n\r\n\r\n     onChange = e => this.setState({[e.target.name]:e.target.value});\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n        return(\r\n          <Consumer>\r\n            {value => {\r\n                const {dispatch} = value;\r\n                return(\r\n            <div className=\"card mb-3\">\r\n             <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n               <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                \r\n                 <TextInputGroup\r\n                   label=\"Name\"\r\n                   name=\"name\"\r\n                   placeholder=\"Enter Name\"\r\n                   value={name}\r\n                   onChange={this.onChange}\r\n                   error={errors.name}\r\n                       \r\n                 />\r\n\r\n\r\n                 <TextInputGroup\r\n                   label=\"Email\"\r\n                   Type=\"email\"\r\n                   name=\"email\"\r\n                   placeholder=\"Enter Email\"\r\n                   value={email}\r\n                   onChange={this.onChange}\r\n                   error={errors.email}\r\n                       \r\n                 />\r\n                 <TextInputGroup\r\n                   label=\"Phone\"\r\n                   name=\"phone\"\r\n                   placeholder=\"Enter Phone\"\r\n                   value={phone}\r\n                   onChange={this.onChange}\r\n                   error={errors.phone}\r\n                       \r\n                 />\r\n             <input type=\"submit\" value=\"AddContact\" className=\"btn btn-light btn-block\"/>\r\n         </form>\r\n       </div>\r\n     </div> \r\n      );\r\n     }}\r\n   </Consumer>\r\n   );\r\n\r\n }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport {Consumer } from '../../context';\r\n// import uuid from 'uuid';\r\nimport axios from 'axios';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\n\r\n\r\n class EditContact extends Component {\r\n     state = {\r\n         name: '',\r\n         email: '',\r\n         phone: '',\r\n         errors: {}\r\n     };\r\n\r\n     async componentDidMount(){\r\n       const {id} = this.props.match.params;\r\n       const res = await axios.get(\r\n           `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n\r\n         const contact = res.data;\r\n\r\n         this.setState({\r\n           name: contact.name,\r\n           email: contact.email,\r\n           phone: contact.phone\r\n       });\r\n     }\r\n\r\n     onSubmit = async (dispatch, e) => {\r\n         e.preventDefault();\r\n         const {name, email, phone} = this.state;\r\n\r\n         //Check For Errors\r\n         if(name === ''){\r\n           this.setState ({errors: {name: 'Name is required' }});\r\n           return;\r\n         }\r\n\r\n         if(email === ''){\r\n          this.setState ({errors: {email: 'Email is required' }});\r\n          return;\r\n        }\r\n\r\n\r\n        if( phone === ''){\r\n          this.setState ({errors: {phone: 'Phone is required' }});\r\n          return;\r\n        }\r\n\r\n        const updContact = {\r\n\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.put\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`,updContact );\r\n         dispatch({type:'UPDATE_CONTACT', payload:res.data});\r\n\r\n\r\n\r\n       \r\n        //Clear Input\r\n        this.setState({\r\n           name: '',\r\n          email: '',\r\n          phone: '',\r\n          errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n     };\r\n\r\n\r\n     onChange = e => this.setState({[e.target.name]:e.target.value});\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n        return(\r\n          <Consumer>\r\n            {value => {\r\n                const {dispatch} = value;\r\n                return(\r\n            <div className=\"card mb-3\">\r\n             <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n               <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                \r\n                 <TextInputGroup\r\n                   label=\"Name\"\r\n                   name=\"name\"\r\n                   placeholder=\"Enter Name\"\r\n                   value={name}\r\n                   onChange={this.onChange}\r\n                   error={errors.name}\r\n                       \r\n                 />\r\n\r\n\r\n                 <TextInputGroup\r\n                   label=\"Email\"\r\n                   Type=\"email\"\r\n                   name=\"email\"\r\n                   placeholder=\"Enter Email\"\r\n                   value={email}\r\n                   onChange={this.onChange}\r\n                   error={errors.email}\r\n                       \r\n                 />\r\n                 <TextInputGroup\r\n                   label=\"Phone\"\r\n                   name=\"phone\"\r\n                   placeholder=\"Enter Phone\"\r\n                   value={phone}\r\n                   onChange={this.onChange}\r\n                   error={errors.phone}\r\n                       \r\n                 />\r\n             <input type=\"submit\" value=\"EditContact\" className=\"btn btn-light btn-block\"/>\r\n         </form>\r\n       </div>\r\n     </div> \r\n      );\r\n     }}\r\n   </Consumer>\r\n   );\r\n\r\n }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from  'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\n const Header = props => {\r\n     const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark navbar-dark bg-danger mb-3 py-0\">\r\n         <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n             <li className=\"nav-item\">\r\n             <Link to=\"/\" className=\"nav-link\">\r\n             <i className=\"fa fa-home\"/> Home\r\n             </Link>\r\n             \r\n             </li>\r\n             <li className=\"nav-item\">\r\n             <Link to=\"/contact/add\" className=\"nav-link\">\r\n             <i className=\"fa fa-plus\"/>Add\r\n             </Link>\r\n             \r\n             </li>\r\n             <li className=\"nav-item\">\r\n             <Link to=\"/about\" className=\"nav-link\"><i className=\"fa fa-question\"/>About\r\n             </Link>\r\n             \r\n             </li>\r\n            </ul>\r\n          </div>\r\n         </div>\r\n        \r\n        </nav>\r\n    );\r\n};\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple App to Manage Contacts</p>\r\n            <p className=\"text-secondary\"> Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function () {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display\"><span className=\"text-danger\"> 404</span> Page Not found</h1>\r\n            <p className=\"lead\">Sorry, that page you're looking for does not exist!</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch\r\n        ('https://jsonplaceholder.typicode.com/posts/1')\r\n         .then(response => response.json())\r\n         .then(data =>\r\n            this.setState({\r\n             title: data.title,\r\n             body: data.body\r\n\r\n         })\r\n     );\r\n }\r\n    render() {\r\n        const { title, body} = this.state;\r\n        return (\r\n\r\n            <div>\r\n              <h1>{title}</h1> \r\n              <p>{body}</p> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Test;\r\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contactss from './components/contacts/Contactss';\n\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\n\nimport {Provider} from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n\n  return (\n  <Provider>\n  <Router>\n    <div className=\"App\">\n    <Header branding = \"Contact Manager\" />\n\n    <div className=\"container\">\n    <Switch>\n      <Route exact path=\"/\" component={Contactss} />\n      <Route exact path=\"/contact/add\" component={AddContact}\n       />\n      <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n      <Route exact path=\"/about\" component={About} />\n      <Route exact path=\"/test\" component={Test} />\n      <Route component={NotFound} />\n    </Switch>\n    </div>\n    </div>\n    </Router>\n  </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}